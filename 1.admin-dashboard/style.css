@import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@300;400;500;700&display=swap');

* {
    margin: 0;
    padding: 0;
    /*margin 0, padding 0 으로 하면 자동으로 list button들이 none으로 된다.*/
    box-sizing: border-box;
    font-family: 'Ubuntu', sans-serif;
}

:root {
    --blue: #287bff;
    --white: #fff;
    --grey: #f5f5f5;
    --black1: #222;
    --black2: #999;
}

body {
    /*vh가 무엇을 의미하는 것일까?*/
    min-height: 100vh;
    /*overflow-x의 의미는?*/
    overflow-x: hidden;
}

.container {
    position: relative;
    width: 100%;
}

.navigation {
    position: fixed;
    width: 300px;
    height: 100%;
    background: var(--blue);
    border-left: 10px solid var(--blue);
    /*transition의 의미는? 또한 단위는 s만 쓰는것인가?*/
    transition: 0.5s;
    /*overflow 의 의미는?*/
    overflow: hidden;
}

.navigation.active {
    width: 80px;


}

.navigation ul {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
}

.navigation ul li {
    position: relative;
    width: 100%;
    /*li의 list style을 없애준다*/
    list-style: none;

    /*해당 요소를 둥글게 만드는것*/
    border-top-left-radius: 30px;
    border-bottom-left-radius: 30px;
}

.navigation ul li:hover,
.navigation ul li.hovered {
    background: var(--white);
}

.navigation ul li:nth-child(1) {
    margin-bottom: 40px;
    /*pointer-events none을 하니까 hover event처럼 효과가 나오지않는다.*/
    pointer-events: none;
}

.navigation ul li a {
    /*여기서 relative와 display flex를 사용하는 이유는?*/
    position: relative;
    /*display: block;*/
    width: 100%;
    display: flex;
    text-decoration: none;
    color: var(--white);
}

.navigation ul li:hover a,
.navigation ul li.hovered a {
    color: var(--blue);

}

.navigation ul li a .icon {
    /*여기서 왜 반드시 relative와 display block을 사용해야할까?*/
    position: relative;
    display: block;
    min-width: 60px;
    height: 60px;
    /*이건 왜 쓰는거지? 안쓰는게 더 예쁜데*/
    line-height: 70px;
    text-align: center;
}

/*아이콘만 크게 만들기*/
.navigation ul li a .icon ion-icon {
    /*font-size의 단위는 em인가?*/
    font-size: 1.75em;
}

.navigation ul li a .title {
    position: relative;
    display: block;
    padding: 0 10px;
    height: 60px;
    line-height: 60px;
    /*이걸 하면 뭐가 달라질까?*/
    white-space: nowrap;
}

/* curve outside */
/* 바깥쪽을 둥글게 만드는 효과*/
.navigation ul li:hover a::before,
.navigation ul li.hovered a::before {
    /*before는 무슨효과?*/
    /*content ''는 무슨의미?*/
    /*before는 무슨의미?*/
    content: '';
    position: absolute;
    right: 0;
    top: -50px;
    width: 50px;
    height: 50px;
    /* 이 효과의 의미는 ? -> 투명한*/
    background: transparent;
    border-radius: 50%;
    box-shadow: 35px 35px 0 10px var(--white);
    /*이 효과의 의미?*/
    pointer-events: none;
}

.navigation ul li:hover a::after,
.navigation ul li.hovered a::after {
    /*after는 무슨효과?*/
    /*content ''는 무슨의미?*/
    /*before는 무슨의미?*/
    content: '';
    position: absolute;
    right: 0;
    bottom: -50px;
    width: 50px;
    height: 50px;
    /* 이 효과의 의미는 ? -> 투명한*/
    background: transparent;
    border-radius: 50%;
    box-shadow: 35px -35px 0 10px var(--white);
    /*이 효과의 의미?*/
    pointer-events: none;
}

/* main */

.main {
    position: absolute;
    /* 이렇게 한 이유는?*/
    width: calc(100% - 300px);
    left: 300px;
    min-height: 100vh;
    background: var(--white);
    /*이 속성의 의미는?*/
    transition: 0.5s;
}

/* 메인 메뉴 토글버튼을 누르면 메인 버튼또한 왼쪽에 붙게 만드는 효과*/
.main.active {
    width: calc(100% - 80px);
    left: 80px;
}

.topbar {
    width: 100%;
    height: 60px;
    /* flex는 왜쓸까*/
    display: flex;
    /*???*/
    justify-content: space-between;
    align-items: center;
    padding: 0 10px;
}

.toggle {
    position: relative;
    width: 60px;
    height: 60px;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 2.5em;
    cursor: pointer;
}

.search {
    position: relative;
    width: 400px;
    margin: 0 10px;
}

.search label {
    position: relative;
    width: 100%;
}

.search label input {
    width: 100%;
    height: 40px;
    border-radius: 40px;
    padding: 5px 20px 5px 35px;
    font-size: 18px;
    border: 1px solid var(--black2);
}

.search label ion-icon {
    position: absolute;
    top: 0;
    left: 10px;
    font-size: 1.2em;
}

.user {
    position: relative;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    overflow: hidden;
    cursor: pointer;
}

.user img {
    /*위에 속성만 적용시켜준다면 이미지는 이상하게 나고이때문에 이미지는 따로 이렇게 절대값으로 초기화시켜주어야함*/
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    /* 이건 뭘까*/
    object-fit: cover;
}

.cardBox {
    position: relative;
    width: 100%;
    padding: 20px;
    display: grid;
    /*    grid란 뭘까    */
    grid-template-columns: repeat(4, 1fr);
    grid-gap: 30px;
}

.cardBox .card {
    position: relative;
    background: var(--white);
    padding: 30px;
    border-radius: 20px;
    display: flex;
    /* 정렬관련 속성 */
    justify-content: space-between;
    box-shadow: 0 7px 25px rgba(0, 0, 0, 0.08);
    cursor: pointer;
}

.cardBox .card .numbers {
    position: relative;
    font-weight: 500;
    font-size: 2.5em;
    color: var(--blue);
}

.cardBox .card .cardName {
    color: var(--black2);
    font-size: 1.1em;
    margin-top: 5px;
}

.cardBox .card .iconBx {
    font-size: 3.5em;
    color: var(--black2);
}

/* 마우스 올렸을때 색 반전되게 하는 속성들*/
.cardBox .card:hover {
    background: var(--blue);
}

.cardBox .card:hover .numbers,
.cardBox .card:hover .cardName,
.cardBox .card:hover .iconBx {
    color: var(--white);
}

.details {
    position: relative;
    width: 100%;
    padding: 20px;
    display: grid;
    grid-template-columns: 2fr 1fr;
    grid-gap: 30px;
    margin-top: 10px;
}

.details .recentOrders {
    position: relative;
    display: grid;
    min-height: 500px;
    background: var(--white);
    padding: 20px;
    box-shadow: 0 7px 25px rgba(0, 0, 0, 0.08);
    border-radius: 20px;
}

.cardHeader {
    display: flex;

    /* 오른쪽 정렬 */
    justify-content: space-between;
    align-items: flex-start;
}

.cardHeader h2 {
    font-weight: 600;
    color: var(--blue);
}

.btn {
    position: relative;
    padding: 5px 10px;
    background: var(--blue);

    /* 클릭했을때 밑줄 없애기*/
    text-decoration: none;
    color: var(--white);
    border-radius: 6px;
}

.details table {
    width: 100%;
    /* ??? */
    /* 이거 안하면 테이블 간격이 줄로 표시됨 거슬림*/
    border-collapse: collapse;
    margin-top: 10px;
}

.details table thead td {
    font-weight: 600;
}

/* 선긋기 */
.details .recentOrders table tr {
    color: var(--black1);
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);
}

/* 마지막행은 줄 긋지 않도록 함*/
.details .recentOrders table tr:last-child {
    border-bottom: none;
}

.details .recentOrders table tr:hover {
    background: var(--blue);
    color: var(--white);
}

.details .recentOrders table tr td {
    padding: 10px;
}

/* 테이블 끝에 정렬이 안되어서 뒤 컬럼이 남아보이는것처럼 보인다. 이를 방지하여 마지막 열은 끝으로 밀어준다.*/
.details .recentOrders table tr td:last-child {
    text-align: end;
}

/* 금액은 달러가 붙기때문에 왼쪽 정렬을하게되면 불편하게 보인다. 위와 같이 오른쪽 정렬을 해준다.*/
.details .recentOrders table tr td:nth-child(2) {
    text-align: end;
}

.details .recentOrders table tr td:nth-child(3) {
    text-align: center;
}

.status.delivered {
    padding: 2px 4px;
    background: #8de02c;
    color: var(--white);
    border-radius: 4px;
    font-size: 14px;
    font-weight: 500;
}

.status.pending {
    padding: 2px 4px;
    background: #f9ca3f;
    color: var(--white);
    border-radius: 4px;
    font-size: 14px;
    font-weight: 500;
}

.status.return {
    padding: 2px 4px;
    background: #f22;
    color: var(--white);
    border-radius: 4px;
    font-size: 14px;
    font-weight: 500;
}

.status.inprogress {
    padding: 2px 4px;
    background: #1795ce;
    color: var(--white);
    border-radius: 4px;
    font-size: 14px;
    font-weight: 500;
}

.recentCustomers {
    position: relative;
    display: grid;
    min-height: 500px;
    padding: 20px;
    background: var(--white);
    box-shadow: 0 7px 25px rgba(0, 0, 0, 0.08);
    border-radius: 20px;
}

.recentCustomers .imgBx {
    position: relative;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    overflow: hidden;
}

.recentCustomers .imgBx img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
}


.recentCustomers table tr td {
    padding: 22px 10px;
}

.recentCustomers table tr td h4 {
    font-size: 16px;
    font-weight: 500;
    line-height: 1.2em;
}

.recentCustomers table tr td h4 span {
    font-size: 14px;
    color: var(--black2);
}

.recentCustomers table tr:hover {
    background: var(--blue);
    color: var(--white);
}

.recentCustomers table tr:hover td h4 span {
    color: var(--white);
}

/* now, make it responsive design */
/* 이부분은 59분부터 다시 보도록 하자 크롬 개발자 도구로 개발하는 과정을 살펴볼 필요가 있음*/
/*@media (max-width: 991px) {*/
/*    .naviation {*/
/*        left: -300px;*/
/*    }*/

/*    .navigation.active {*/
/*        width: 300px;*/
/*        left: 0;*/
/*    }*/

/*    .main {*/
/*        width: 100px;*/
/*        left: 0;*/
/*    }*/

/*    .main.active {*/
/*        left: 300px;*/

/*    }*/

/*    .cardBox {*/
/*        grid-template-columns: repeat(2, 1fr);*/
/*    }*/
/*}*/

/*@media (max-width: 768px)*/
/*{*/
/*    .details{*/
/*        grid-template-columns: repeat(1, 1fr);*/
/*    }*/
/*    .recentOrders{*/
/*        overflow-x: auto;*/
/*    }*/
/*    .status.inprogress{*/
/*        white-space: nowrap;*/
/*    }*/
/*}*/

/*@media (max-width: 400px)*/
/*{*/
/*    .cardBox{*/
/*        grid-template-columns: repeat(1,1fr);*/
/*    }*/
/*    .cardHeader h2{*/
/*        font-size: 20px;*/
/*    }*/
/*    .user{*/
/*        min-width: 40px;*/
/*    }*/
/*    .navigation{*/
/*        width: 100%;*/
/*        left: -100%;*/
/*        z-index: 1000;*/
/*    }*/
/*    .navigation.active{*/
/*        width: 100%;*/
/*        left: 0;*/

/*    }*/
/*    .toggle{*/
/*        z-index:10001;*/
/*    }*/
/*    .main.active .toggle{*/
/*        position: fixed;*/
/*        right: 0;*/
/*        left: initial;*/
/*        color: #fff;*/
/*    }*/
/*}*/

/* TODO: recentOrders 에서 발생하는 헤더부분 margin 발생하는 문제 해결*/
/* TODO: recentCustomer grid에서 margin 발생하는 문제 해결*/
/* TODO: 반응형 디자인할때 이상하게 발생하는 css문제 해결*/